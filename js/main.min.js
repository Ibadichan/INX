(function() {
  if (window.NodeList && !NodeList.prototype.forEach) {
    NodeList.prototype.forEach = Array.prototype.forEach;
  }

  function isInViewport(element) {
    var box = element.getBoundingClientRect();

    return (
      box.top >= 0 &&
      box.left >= 0 &&
      box.bottom <= document.documentElement.clientHeight &&
      box.right <= document.documentElement.clientWidth
    );
  }

  function getWindowSize() {
    var height = Math.max(
      document.body.scrollHeight,
      document.documentElement.scrollHeight,
      document.body.offsetHeight,
      document.documentElement.offsetHeight,
      document.body.clientHeight,
      document.documentElement.clientHeight
    );

    var width = Math.max(
      document.body.scrollWidth,
      document.documentElement.scrollWidth,
      document.body.offsetWidth,
      document.documentElement.offsetWidth,
      document.body.clientWidth,
      document.documentElement.clientWidth
    );

    return {
      height,
      width
    };
  }

  function AnimatableSection(props) {
    var self = this;
    var animationBreakpoint = 768;
    self.node = props.node;
    self.elementsToAnimate = props.elementsToAnimate;

    self.tryToAnimate = function() {
      if (
        isInViewport(self.node) &&
        getWindowSize().width >= animationBreakpoint
      ) {
        var node, animationClass;

        self.elementsToAnimate.forEach(function(element) {
          node = element.node;
          animationClass = element.animationClass;

          if (node.forEach) {
            var innerElements = node;

            innerElements.forEach(function(innerElement) {
              innerElement.classList.add(animationClass);
            });
          } else {
            node.classList.add(animationClass);
          }
        });

        window.removeEventListener("scroll", self.tryToAnimate);
      }
    };

    window.addEventListener("scroll", self.tryToAnimate);
  }

  var newRegulatedStandard = new AnimatableSection({
    node: document.querySelector(".new-regulated-standard"),
    elementsToAnimate: [
      {
        node: document.querySelectorAll(".head_words-fade-in__text"),
        animationClass: "head_words-fade-in__text_animated"
      },
      {
        node: document.querySelector(".new-regulated-standard__head"),
        animationClass: "new-regulated-standard__head_animated"
      },
      {
        node: document.querySelector(".new-regulated-standard__list"),
        animationClass: "new-regulated-standard__list_animated"
      },
      {
        node: document.querySelector(".new-regulated-standard"),
        animationClass: "new-regulated-standard_animated_bg"
      }
    ]
  });

  newRegulatedStandard.tryToAnimate();
})();
